html {
  height: 100%;
}
@font-face{
  font-family: newfont;
  src: url('fonts/Handlee-Regular.ttf');
}
body {

  margin: auto;
  padding: 30px;
  max-width: 800px;
  min-height: 20000px;
  background: #f5f5f5;
  background: linear-gradient(to bottom, #f5f5f5, #fff);
  /*we can use rgba and have an alpha*/
  height: 100%;
  font-family: 'Noticia Text', serif;
  overflow-x: hidden;
  border: 1px solid #ccc;

}
h1,h2,h3,h4{
   text-align: center;

}
nav{
	border-bottom-width: 2px; 
	border-bottom-color: #ccc;
	border-bottom-style: solid; 
	padding: 10px; 
	margin-bottom: 15px; 
	background-color: #fff; 
	font-family: 'Shrikhand', cursive; 
	position: fixed;
	left: 0;
	top: 0;
	width: 100%;
}
/*styling the form*/
form{
	border: 1px solid black; 
	padding: 20px; 
    background-color: #FFCAE0;
}
label{
	display: block;
	width: 100px;
	margin-top: 10px;
}
button{
	display: block;
	width: 100px;
	margin-top: 15px;
}
 
[type] {
/*it selects all elements that have a type*/
  border: 1px solid #ccc;
  padding: 5px;
  /*we can use  'input [type]'*/
}

[type = 'text']{
	border: 3px solid black;
	/*it overwrites the existing border*/
}

/*we can select and entire form with [action], if it has the attribute*/
[action = '/login']{
	border: 3px solid black;

}
.fa.fa-question-circle[title~="trust"] {
  border: 1px solid red;

	/*if it has the word 'trust' in the title*/

}
[href^="/register"]
{
	/* ^ is used for when something starts with something*/
	/*here it looks for a href element that starts exactly with /register*/
	/*we have to add the dot*/
	color: #197BDA;
	padding: 5px 5px 5px; 
	text-decoration: underline;
	display: inline-block;
}

[href$=".pdf"]
{
	/* $ is used when we look at how something ends. 
	here it searches for the href element that ends in .pdf*/
	/*we don't have to add the dot*/
	color: #8FCD2D;
	display: inline-block;
	padding: 5px 5px 5px; 
	text-decoration: underline;
}
.website {
  display: inline-block;
   width: 100px; 
   height: 100px;
   background-color: #48DCBB; "
}

.website:hover {
  background-color: black;
  border: 5px solid yellow;
  }
  /*!!!!!:
  .class
  #id 
  :pseudo;*/

  p.child:first-child{
  	/*it selects the first in a set*/
  	/*the class can be removed*/
      background-color: black;
      color: white;
  }


  span:last-child{
  	background-color: purple; 
  	color: white;

  }



  .focusinput{
  	border: 1px solid black;
  	width: 100%;
  	font-size: 30px; 
  	padding: 10px;
  	color: #999;
  	opacity: 0.25;
  }
  .focusinput:focus{
  	/*when we click into it it changes*/
  	border: 3px solid #ccc; 
  	outline: 0;
  	color: black;
  	opacity: 1;
  }


  input[type="checkbox"]:checked {
  	/*we gave it the checked pseudo*/
  	
  	height: 50px;
  	width: 50px;
  }
  input[type="checkbox"]:checked + div.checkeddiv{
    /*when the element is checked and it has the specified div after it*/
    color: #ccc; 
    background-color: green; 
  }

  input:disabled{
  	background-color: black;
  	border: 3px solid pink; 

  }

  input.disabled2:disabled{
    background-color: white;
    border: 1px solid black;
  }
  input:enabled{
  	background-color: #ccc;
  	border: 1px solid black;
  }

  p.para:not(.graph){
  	/*it selects all paragraphs that do not have the "graph" in the class */
   background-color: red;
  }

  .block {
  width: 200px;
  height: 200px;
  display: block;
  margin: 50px auto;
  background-color: #fff;
  border: 1px solid #ccc;
  position: relative;
}

.block::before {
	/* :hover can also be added*/
  display: inline-block;
  content: ' here is the content ';
  color: #fff;
  background-color: #8c1515;
  position: absolute;
  left: -20px;
  top: -20px;
  width: 200px;
  height: 200px;
  z-index: -1;
}

.block::after {
  display: inline-block;
  content: 'another content';
  color: #fff;
  background-color: #000;
  position: absolute;
  right: -20px;
  bottom: -20px;
  width: 200px;
  height: 200px;
  z-index: 0;
}

a[href^='https'] {
  text-decoration: none;
}

a[href^='https']::after {
  content: ' (Secure)';
  font-size: 12px;
  color: green;
}


.label.deal::before {
  content: 'DEAL!!!!';
  background-color: #000;
  display: inline-block;
  padding: 5px;
  color: yellow;
  font-size: 14px;
}

#title{
  text-align: center;
  background-color: #FFDFD2;
  text-decoration: underline;
  font-size: 50px;
  font-weight: bold;
}
.roundcorners{
  display: inline-block;
  width: 300px;
  height: 300px;

  border-top-left-radius: 50%;
  border-bottom-right-radius: 50%;


  background-image: url('images/cat.jpg');
  background-position: center center;
}


.rgba{
  color: rgb(0,0,0,0.5);
  /*50% lighter */
  background-color: rgba(27,43,168, 0.3);
}
.hsl{
  background-color: hsl(180, 50%, 70%, 0.8);
       /*a number between 0-360*/
}
.box{
  display: inline-block;
  width: 200px; 
  height: 200px; 
  background-color: #FEFF88;
  border: 1px solid black;

}
.opacity{
  opacity: 0.5;
  /* the text, the border, and the background change*/
}
.alpha{
  color: rgba(0, 0, 0, 0.35);
  /*the background color doesn't change*/
  background-color: rgba(243, 231, 49, 0.8);
}
.shadow{
  text-align: center;
  margin-top: 150px; 
  font-size: 40px;
  
  text-shadow: 5px 10px 0 gray;
 /*horizontal offset, vertical-off, blur-radius, color*/
  /* 0 is how blurry should it be*/
  /* -5 px -10px, the shadow moves to the left and up*/

}
.shadow2{
  text-align: center;
  margin-top: 50px; 
  font-size: 40px;
  color: #fff;
  text-shadow: 0 0  5px #000;

  }
  .boxshadow{
    width: 200px;
    height: 200px; 
    float: left;
    background-color: white; 
    border: 2px solid #aaa;
    margin: 50px auto;

    box-shadow: 10px 10px 3px #aaa;
  }
  .boxshadow2{
    width: 200px;
    height: 200px; 
    background-color: white; 
    border: 2px solid #aaa;
    margin: 50px auto;
    float: right;

    box-shadow: 0 0 40px black;

  }
  .boxshadow3{
    width: 200px;
    height: 200px; 
    background-color: white; 
    border: 2px solid #aaa;
    margin: 50px auto;
    float: center;

    box-shadow: inset 0 0 40px black;
    /*inset add the shadow inside the box*/

  }
  .text-area{
    width: 300px;
    border: 1px solid purple; 
    margin-bottom: 20px;
    overflow: hidden;
    white-space: nowrap;
  }
  .clip{
    text-overflow: clip;
  }
  .ellipse{
    text-overflow: ellipsis;
    /*ellipse does not work if you do not have a border*/
    /*there also is 'vellip' which gives you the dot dot dot but up-down*/
  }
  .text-area2{
    width: 300px; 
    border: 1px solid black;
    word-wrap: break-word;
    /*breaks long words so it doesn't go outside the box*/
  }
  .text-area3{
    
     width: 300px; 
    border: 1px solid black;
    word-break: break-all;
    /*lines can break between any two letters*/
    /* 'keep all' doesn't allow the browser to break a longer word*/
  }
/*word wrap and word break work good together*/
  }
  .text4{
    text-align: justify;
    text-align-last: right;
    /*last line*/
  }
  .text5{
      font-family: newfont;
  }

.transi-size{
  display: inline-block;
  width: 30px;
  height: 30px; 
  background-color: blue;
  transition: 250ms width linear,
  /*lenght: how much should it take, ms for milliseconds, s for seconds; what is transitioning; 
  speed curvure: how the transition is done;*/
              250ms height linear;
  /*if we do not mention the height then that's  done instantly, and only the widht is is transitioning*/
  /*transition: 250ms all linear;*/
}
.transi-size:hover{
  width: 100px; 
  height: 100px;
}

.transi-colors{
  text-decoration: none;
  color: black;
  font-size: 15px;

  transition-duration: 1s;
  transition-property: color;
  transition-timing-function: linear;
}
.transi-colors:hover{
  color: red; 
  text-decoration: underline;
}

.parent{
  position: relative;
  height: 50px; 
  background-color: white;
}
.child{
  position: absolute;
  top: 0;
  left: 0;
  width: 50px; 
  height: 50px; 
  background-color: orange;

  transition-duration: 2s; 
  transition-property: left; 
  transition-timing-function: ease-in-out;
  /*ease-in: it starts slowly and picks up speed;*/
  /*ease-out: it starts at a regular speed and slows down;
  ease-in-out: it starts slows, goes fast, and slows down;
  ease is the default*/
  /*linear is the same speed all the way*/

  /*there are ways to create your own transition timing function, it looks like:
  cubic-bezier(n,n,n,n);*/
}
.parent:hover .child{
  left: calc(100% - 50px);
  /*it goes 100% to the left except 50px*/
}


.parent2 {
  position: relative;
  height: 50px;
  background-color: #fff;
}

.child2 {
  position: absolute;
  top: 0;
  left: 0;
  width: 50px;
  height: 50px;
  background-color: #8c1515;
  transition-duration: 5s;
  transition-property: left;
  transition-timing-function: linear;
  transition-delay: 2s;
}

.parent2:hover .child2 {
  left: calc(100% - 50px);
}
 h1{
  background-color: #ccc;}


/*.container{
  border: 1px solid red;
}*/
.box{
  width: 150px;
  height: 150px; 
  background-color: #0c1515; 
  position: relative;

  left: 25%;

  transform: translate(100px, 100px);
}


.box::before {
  content: ' ';
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background-color: #000;
  z-index: -1;

  transform: translate(-20px, -20px);
  /* x axis: left, y axis: up;*/
}

.box2{
  width: 150px;
  height: 150px; 
  background-color: violet; 
  position: relative;

  left: 25%;
}

.box2:hover{
   /*transform: rotate(45deg);*/
   transform: rotateX(90deg);
   transition-delay: 1s;
   transition: 1s all linear;
}

.boxs{
  float: left;
  width: 80px; 
  height: 80px;
  padding: 20px; 
  background-color: red;
  margin: 0 auto; 
  text-align: center;
  color: white; 
  margin-right: 10px; 

  
}

.scale:hover{
  border: 2px solid black;
  background-color: black;

  transition: 1s all linear;
  transform: scale(2);

  /*how far you want to scale*/
  /* scale(2) makes it twice the size*/
}

.skew1, .skew2{
  border: 1px solid black; 

}
.skew1{
  transform: skewY(2deg);
}
.skew2{
  transform: skew(20deg);
}

.box3{
  width: 150px;
  height: 150px; 
  background-color: #0c1515; 
  position: relative;
  text-align: center;
  color: white;
  left: 25%;

}
.box3:hover{
  transform: scale(1.1) 
             translate(20px, 20px)
             skewX(30deg);
  transition-delay: 1s;
  transition: 1s all ease-out;

  background-color: blue;
}

.box-3d{
  width: 80px;
  height: 80px;
  padding: 20px;
  background-color: #8c1515;
  text-align: center;
  color: #fff;
  margin-right: 10px;
  margin: 0 auto;

  transition: 1s all ease-out;
}

.box-3d:hover {
/*  transform: rotateX(180deg)
             rotateY(180deg)
             rotateZ(180deg);
*/
  /*transform: skewX(30deg) skewY(-30deg);*/
  /*transform: scaleX(2) scaleY(3);*/
  transform: translateX(50px)
             translateY(50px);
background-color: #000;
}


